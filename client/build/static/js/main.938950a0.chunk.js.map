{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","components/Navbar/navbar.js","components/Footer/footer.js","components/UI/Input/input.js","components/UI/Button/button.js","containers/Form/form.js","containers/Form/Login/login.js","containers/Form/SignUp/signup.js","components/Message/message.js","components/Friend/friend.js","containers/chatter.js","hoc/auth/PrivateRoute.js","App.js","serviceWorker.js","index.js","containers/chatter.module.css","components/Navbar/navbar.module.css","containers/Form/Login/login.module.css","components/UI/Button/button.module.css","components/UI/Input/input.module.css","containers/Form/SignUp/signup.module.css","components/Footer/footer.module.css","containers/Form/form.module.css","components/Message/message.module.css"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","intialState","isAuthenticated","user","combineReducers","auth","state","arguments","length","undefined","action","Object","objectSpread","keys","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","connect","withRouter","props","react_default","a","createElement","className","Classes","navbar","navItems","react_router_dom","to","div","onClick","history","push","style","backgroundColor","fontFamily","color","border","fontSize","cursor","link","name","footer","Date","getFullYear","input","display","width","marginRight","htmlFor","for","label","Input","onChange","e","press","target","value","button","success","click","danger","default","form","Form","height","children","Login","username","password","submit","preventDefault","_this","loginUser","save","text","setState","defineProperty","this","nextProps","console","log","placeForm","image","Welcome","Form_form","Helmet","margin","Input_input","textDecoration","Button_button","react_router","React","Component","userData","post","then","res","data","setItem","jwt_decode","catch","err","response","SignUp","password2","match","registerUser","inputCheck","flash","message","msg","Friend_friend","socket","io","connectToSocket","sender","reciever","emit","privateChat","private","Chatter","messageLog","searchField","friends","cnt","chat","_this2","on","messages","map","val","i","key","wrapper","list","addFriends","placeholder","view","msgBlock","msgBox","path","render","chatter","getItem","now","exp","location","href","App","es","exact","Navbar_navbar","component","auth_PrivateRoute","Footer_footer","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"8SAYeA,EAVM,SAAAC,GACbA,EAEAC,IAAMC,SAASC,QAAQC,OAAvB,cAAiDJ,SAG1CC,IAAMC,SAASC,QAAQC,OAAvB,eCgCFC,EAAiB,SAAAC,GAC1B,MAAO,CACHC,KCxCwB,mBDyCxBC,QAASF,IAKJG,EAAa,kBAAM,SAAAC,GAE5BC,aAAaC,WAAW,OAExBb,GAAa,GAEbW,EAASL,EAAe,+BEpDtBQ,EAAc,CAChBC,iBAAiB,EACjBC,KAAM,ICFJF,EAAc,GCELG,cAAgB,CAC3BC,KFEW,WAA4C,IAAlCC,EAAkCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA1BN,EAAaS,EAAaH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GACnD,OAAQG,EAAOf,MACX,IDPwB,mBCQpB,OAAOgB,OAAAC,EAAA,EAAAD,CAAA,GACAL,EADP,CAEIJ,gBAAwD,IAAvCS,OAAOE,KAAKH,EAAOd,SAASY,OAC7CL,KAAMO,EAAOd,UAErB,QAAS,OAAOU,IETpBQ,ODFW,WAA4C,IAAlCR,EAAkCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA1BN,EAAaS,EAAaH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GACnD,OAAQG,EAAOf,MACX,IFLkB,aEMd,OAAOe,EAAOd,QAClB,QAAS,OAAOU,MEJlBS,EAAa,CAACC,KAYLC,EATDC,YACVC,EAHgB,GAKhBC,YACIC,IAAeC,WAAf,EAAmBP,GACnBQ,OAAOC,8BAAgCD,OAAOC,kDC6BvCC,cAJS,SAAAnB,GAAK,MAAK,CAC9BD,KAAMC,EAAMD,OAGwB,CAAER,cAA3B4B,CAAyCC,YAnCzC,SAAAC,GAAS,IACZzB,EAAoByB,EAAMtB,KAA1BH,gBAKR,OACI0B,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQC,QACpBL,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQE,UACpBN,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GAAG,KAAT,UACLR,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQK,KAClBnC,EACE0B,EAAAC,EAAAC,cAAA,UACIQ,QAXF,WAClBX,EAAMY,QAAQC,KAAK,KACnBb,EAAM9B,cAUc4C,MAAO,CACHC,gBAAiB,cACjBC,WAAY,UACZC,MAAO,UACPC,OAAQ,OACRC,SAAU,SACVC,OAAQ,YARhB,WADgBnB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GAAIT,EAAMqB,MAAOrB,EAAMsB,8BCN3DC,EARA,SAAAvB,GACX,OACIC,EAAAC,EAAAC,cAAA,UAAQC,UAAWC,IAAQkB,QACvBtB,EAAAC,EAAAC,cAAA,iDAA0C,IAAIqB,MAAOC,mECSlDC,EAZD,SAAA1B,GAAK,OACfC,EAAAC,EAAAC,cAAA,OAAKW,MAAO,CAAEa,QAAS3B,EAAM2B,QAASC,MAAO5B,EAAM4B,MAAOC,YAAa7B,EAAM6B,cACzE5B,EAAAC,EAAAC,cAAA,SAAO2B,QAAS9B,EAAMsB,KAAMlB,UAAWC,IAAQ0B,KAAM/B,EAAMgC,OAC3D/B,EAAAC,EAAAC,cAAA,SACInC,KAAMgC,EAAMhC,KACZoC,UAAWC,IAAQ4B,MACnBX,KAAMtB,EAAMsB,KACZY,SAAU,SAAAC,GAAC,OAAInC,EAAMoC,MAAQpC,EAAMoC,MAAMD,EAAEE,OAAOC,MAAOtC,EAAMsB,MAAQ,2BCkBpEiB,EA1BA,SAAAvC,GACX,OAAQA,EAAMhC,MACV,IAAK,UACD,OAAOiC,EAAAC,EAAAC,cAAA,UACHC,UAAWC,IAAQmC,QACnB1B,MAAO,CAAEa,QAAS3B,EAAM2B,SACxBhB,QAAS,SAAAwB,GAAC,OAAInC,EAAMyC,MAAMN,KACzBnC,EAAMsB,MAEf,IAAK,SACD,OAAOrB,EAAAC,EAAAC,cAAA,UACHC,UAAWC,IAAQqC,OACnB5B,MAAO,CAAEa,QAAS3B,EAAM2B,SACxBhB,QAAS,SAAAwB,GAAC,OAAInC,EAAMyC,MAAMN,KACzBnC,EAAMsB,MAEf,QACI,OAAOrB,EAAAC,EAAAC,cAAA,UACHC,UAAWC,IAAQsC,QACnB7B,MAAO,CAAEa,QAAS3B,EAAM2B,SACxBhB,QAAS,SAAAwB,GAAC,OAAInC,EAAMyC,MAAMN,KACzBnC,EAAMsB,yBCdRsB,EANF,SAAA5C,GAAK,OACdC,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAQwC,KAAM/B,MAAO,CAAEgC,OAAQ9C,EAAM8C,OAAQlB,MAAO5B,EAAM4B,QACtE5B,EAAM+C,WCKTC,6MACFrE,MAAQ,CACJsE,SAAU,GACVC,SAAU,GACVxE,MAAM,KAmBVyE,OAAS,SAAAhB,GACLA,EAAEiB,iBACFC,EAAKrD,MAAMsD,UAAU,CACjBL,SAAUI,EAAK1E,MAAMsE,SACrBC,SAAUG,EAAK1E,MAAMuE,cAK7BK,KAAO,SAACC,EAAMxF,GACVqF,EAAKI,SAALzE,OAAA0E,EAAA,EAAA1E,CAAA,GAAiBhB,EAAOwF,wFAzBpBG,KAAK3D,MAAMtB,KAAKH,iBAChBoF,KAAK3D,MAAMY,QAAQC,KAAK,8DAIN+C,GAClBA,EAAUlF,KAAKH,iBACfoF,KAAK3D,MAAMY,QAAQC,KAAK,YAGxB+C,EAAUzE,QACV0E,QAAQC,IAAIF,EAAUzE,yCAkB1B,OACIc,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ0D,WACpB9D,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ2D,OACpB/D,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ4D,SAAxB,0BAC2BhE,EAAAC,EAAAC,cAAA,WAD3B,+CAIJF,EAAAC,EAAAC,cAAC+D,EAAD,CAAMpB,OAAO,QAAQlB,MAAM,OACvB3B,EAAAC,EAAAC,cAACgE,EAAA,OAAD,KACIlE,EAAAC,EAAAC,cAAA,uBAEJF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,OACIW,MAAO,CAAEK,SAAU,OAAQiD,OAAQ,uBADvC,kCAIAnE,EAAAC,EAAAC,cAACkE,EAAD,CACIrG,KAAK,OACLsD,KAAK,WACLU,MAAM,WACNI,MAAOuB,KAAKJ,OAChBtD,EAAAC,EAAAC,cAACkE,EAAD,CACIrG,KAAK,WACLsD,KAAK,WACLU,MAAM,WACNI,MAAOuB,KAAKJ,OAChBtD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACIC,GAAG,WACHK,MAAO,CAAEwD,eAAgB,SAF7B,+BAMJrE,EAAAC,EAAAC,cAACoE,EAAD,CAAQjD,KAAK,QAAQmB,MAAOkB,KAAKR,SAChCQ,KAAKhF,MAAMD,KAAOuB,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAU/D,GAAG,aAAgB,cAvEhDgE,IAAMC,WAmFX5E,cALS,SAAAnB,GAAK,MAAK,CAC9BD,KAAMC,EAAMD,KACZS,OAAQR,EAAMQ,SAGsB,CAAEmE,UX7EjB,SAAAqB,GAAQ,OAAI,SAAAxG,GACjCT,IAAMkH,KAAK,aAAcD,GACpBE,KAAK,SAAAC,GAEFjB,QAAQC,IAAIgB,EAAIC,MAChB,IAAMtH,EAAQqH,EAAIC,KAAKtH,MAEvBW,aAAa4G,QAAQ,MAAOvH,GAE5BD,EAAaC,GAEb,IAAMM,EAAUkH,IAAWxH,GAE3BU,EAASL,EAAeC,MAE3BmH,MAAM,SAAAC,GACHhH,EAAS,CACLH,KChCU,aDiCVC,QAASkH,EAAIC,SAASL,YW2DvBjF,CAAwCkD,oBClFjDqC,6MACF1G,MAAQ,CACJsE,SAAU,GACVC,SAAU,GACVoC,UAAW,GACXC,OAAO,KAcXpC,OAAS,SAAAhB,GACLA,EAAEiB,iBACEC,EAAK1E,MAAM4G,OACXlC,EAAKrD,MAAMwF,aAAa,CACpBvC,SAAUI,EAAK1E,MAAMsE,SACrBC,SAAUG,EAAK1E,MAAMuE,UACtBG,EAAKrD,MAAMY,YAGtB6E,WAAa,WACLpC,EAAK1E,MAAMuE,WAAaG,EAAK1E,MAAM2G,UACnCjC,EAAKI,SAAS,CAAE8B,OAAO,IAGvBlC,EAAKI,SAAS,CAAE8B,OAAO,OAI/BhC,KAAO,SAACC,EAAMxF,GAIVqF,EAAKI,SAALzE,OAAA0E,EAAA,EAAA1E,CAAA,GAAiBhB,EAAOwF,GAAQ,WACf,cAATxF,GACAqF,EAAKoC,mGAlCT9B,KAAK3D,MAAMtB,KAAKH,iBAChBoF,KAAK3D,MAAMY,QAAQC,KAAK,8DAIN+C,GAClBA,EAAUzE,QACV0E,QAAQC,IAAI,gDAgChB,OACI7D,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ0D,WACpB9D,EAAAC,EAAAC,cAAC+D,EAAD,CAAMpB,OAAO,QAAQlB,MAAM,QACvB3B,EAAAC,EAAAC,cAACgE,EAAA,OAAD,KACIlE,EAAAC,EAAAC,cAAA,wBAEHwD,KAAKhF,MAAM4G,MAAQ,KAChBtF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQqF,OAAxB,yBAEJzF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,OACIW,MAAO,CAAEK,SAAU,OAAQiD,OAAQ,uBADvC,kDAIAnE,EAAAC,EAAAC,cAACkE,EAAD,CACIrG,KAAK,OACLsD,KAAK,WACLU,MAAM,WACNI,MAAOuB,KAAKJ,OAChBtD,EAAAC,EAAAC,cAACkE,EAAD,CACIrG,KAAK,WACLsD,KAAK,WACLU,MAAM,WACNI,MAAOuB,KAAKJ,OAChBtD,EAAAC,EAAAC,cAACkE,EAAD,CACIrG,KAAK,WACLsD,KAAK,YACLU,MAAM,mBACNI,MAAOuB,KAAKJ,OAChBtD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACIC,GAAG,IACHK,MAAO,CAAEwD,eAAgB,SAF7B,6BAMJrE,EAAAC,EAAAC,cAACoE,EAAD,CAAQjD,KAAK,UAAUtD,KAAK,UAAUyE,MAAOkB,KAAKR,kBApFjDsB,IAAMC,WAqGZ5E,eALS,SAAAnB,GAAK,MAAK,CAC9BD,KAAMC,EAAMD,KACZS,OAAQR,EAAMQ,SAGsB,CAAEqG,aZ1Gd,SAACb,EAAU/D,GAAX,OAAuB,SAAAzC,GAC/CT,IAAMkH,KAAK,eAAgBD,GACtBE,KAAK,SAAAC,GAAG,OAAIlE,EAAQC,KAAK,OACzBqE,MAAM,SAAAC,GAAG,OAAIhH,EAAS,CACnBH,KCTc,aDUdC,QAASkH,EAAIC,SAASL,YYqGnBjF,CAA2CC,YAAWsF,gEC7GtDM,GAAA,SAAA3F,GACX,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAQuF,KACnB5F,EAAM+C,WCHJ8C,WAAA,SAAA7F,GACX,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACVJ,EAAM+C,YCGb+C,GAASC,KAAGjG,QAAQ,yBAEpBkG,GAAkB,SAACC,EAAQC,GAC7BJ,GAAOK,KAAK,YAAa,CAAEF,SAAQC,cAEjCE,GAAc,SAACH,EAAQC,EAAUN,GACnCE,GAAOK,KAAK,UAAW,CAAEE,QAAST,EAAKK,SAAQC,cAG7CI,8MASF3H,MAAQ,CACJuH,SAAU,GACVP,QAAS,GACTY,WAAY,CAAC,QAAS,MACtBC,YAAa,GACbC,QAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,cAGrErE,MAAQ,SAACsE,EAAKpF,GACVuC,QAAQC,IAAIxC,GACZ+B,EAAKI,SAALzE,OAAA0E,EAAA,EAAA1E,CAAA,GAAiBsC,EAAOoF,OAG5BvD,OAAS,SAAAhB,GACL6D,GAAgB3C,EAAKrD,MAAMtB,KAAKF,KAAKyE,SAAUI,EAAK1E,MAAMuH,aAG9DS,KAAO,SAAAxE,GACHiE,GAAY/C,EAAKrD,MAAMtB,KAAKF,KAAKyE,SAAUI,EAAK1E,MAAMuH,SAAU7C,EAAK1E,MAAMgH,6FA1B3D,IAAAiB,EAAAjD,KAChBmC,GAAOe,GAAG,UAAW,SAAAjB,GACjBgB,EAAKnD,SAAS,SAAC9E,EAAOqB,GAClB,MAAO,CAAE2F,QAAShH,EAAM4H,WAAW1F,KAAK+E,yCA0BhD,IAAMkB,EAAWnD,KAAKhF,MAAM4H,WAAWQ,IAAI,SAACC,EAAKC,GAAN,OACvChH,EAAAC,EAAAC,cAACwF,GAAD,CAASuB,IAAKD,GAAID,KAEtB,OACI/G,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAQ8G,SACpBlH,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAQ+G,MACpBnH,EAAAC,EAAAC,cAAA,SACInC,KAAK,OACLsD,KAAK,WACLlB,UAAWC,KAAQgH,WACnBC,YAAY,mBAChBrH,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAQoG,SACnB9C,KAAKhF,MAAM8H,QAAQM,IAAI,SAACC,EAAKC,GAAN,OAAahH,EAAAC,EAAAC,cAAC0F,GAAD,CAAQqB,IAAKD,GAAID,OAG9D/G,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAQkH,MACpBtH,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAQmH,UACnBV,GAEL7G,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAQoH,QACpBxH,EAAAC,EAAAC,cAACkE,EAAD,CACIrG,KAAK,OACLsD,KAAK,UACLU,MAAM,GACNL,QAAQ,eACRC,MAAM,MACNC,YAAY,OACZO,MAAOuB,KAAKvB,QAChBnC,EAAAC,EAAAC,cAACoE,EAAD,CACIvG,KAAK,UACLsD,KAAK,eACLK,QAAQ,SACRc,MAAOkB,KAAKgD,iBA9DlBlC,IAAMC,WA2Eb5E,eALS,SAAAnB,GAAK,MAAK,CAC9BD,KAAMC,EAAMD,KACZS,OAAQR,EAAMQ,SAGsB,KAAzBW,CAA+BwG,IChF/BxG,eAJS,SAACnB,GAAD,MAAY,CAChCD,KAAMC,EAAMD,OAGDoB,CARM,SAACpB,GAAD,OACjBuB,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAOkD,KAAK,WAAWC,OAAQ,SAAA3H,GAAK,OAAItB,EAAKH,gBAAkB0B,EAAAC,EAAAC,cAACyH,GAAD,MAAc3H,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAU/D,GAAG,kBCS9F,GAAIrC,aAAayJ,QAAQ,OAAQ,CAE/BrK,EAAaY,aAAayJ,QAAQ,QAGlC,IAAM9J,GAAUkH,IAAW7G,aAAayJ,QAAQ,QAGhDvI,EAAMnB,SAASL,EAAeC,KAGVyD,KAAKsG,MACP/J,GAAQgK,MAExBzI,EAAMnB,SAASD,KAGf0B,OAAOoI,SAASC,KAAO,SAmCZC,oLA9BX,OACEjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAU7I,MAAOA,GACfW,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAGbH,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAOkD,KAAK,IAAIU,OAAK,EAACT,OAAQ,kBAAM1H,EAAAC,EAAAC,cAACkI,EAAD,CAAQ/G,KAAK,UAAUD,KAAK,gBAChEpB,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAOkD,KAAK,WAAWU,OAAK,EAACT,OAAQ,kBAAM1H,EAAAC,EAAAC,cAACkI,EAAD,CAAQ/G,KAAK,QAAQD,KAAK,SACrEpB,EAAAC,EAAAC,cAACqE,EAAA,EAAD,KACEvE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAO4D,OAAK,EAACV,KAAK,WAAWC,OAAQ,kBAAM1H,EAAAC,EAAAC,cAACkI,EAAD,CAAQ/G,KAAK,UAAUD,KAAK,UAIzEpB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aACdH,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAOkD,KAAK,IAAIU,OAAK,EAACE,UAAWtF,IACjC/C,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAOkD,KAAK,WAAWU,OAAK,EAACE,UAAWjD,KACxCpF,EAAAC,EAAAC,cAACqE,EAAA,EAAD,KACEvE,EAAAC,EAAAC,cAACoI,GAAD,CAAcH,OAAK,EAACV,KAAK,eAK7BzH,EAAAC,EAAAC,cAACqI,EAAD,gBAxBM9D,aCvBE+D,QACW,cAA7B7I,OAAOoI,SAASU,UAEe,UAA7B9I,OAAOoI,SAASU,UAEhB9I,OAAOoI,SAASU,SAASnD,MACvB,2DCZNoD,IAAShB,OAAO1H,EAAAC,EAAAC,cAACyI,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpE,KAAK,SAAAqE,GACjCA,EAAaC,mCElInBC,EAAAC,QAAA,CAAkBlC,QAAA,yBAAAC,KAAA,sBAAAG,KAAA,sBAAAF,WAAA,4BAAAG,SAAA,0BAAAC,OAAA,6CCAlB2B,EAAAC,QAAA,CAAkB/I,OAAA,uBAAAC,SAAA,yBAAAG,IAAA,yCCAlB0I,EAAAC,QAAA,CAAkBtF,UAAA,yBAAAC,MAAA,qBAAAC,QAAA,4CCAlBmF,EAAAC,QAAA,CAAkB1G,QAAA,wBAAAD,OAAA,uBAAAF,QAAA,6CCAlB4G,EAAAC,QAAA,CAAkBpH,MAAA,qBAAAF,IAAA,wCCAlBqH,EAAAC,QAAA,CAAkBtF,UAAA,+CCAlBqF,EAAAC,QAAA,CAAkB9H,OAAA,4CCAlB6H,EAAAC,QAAA,CAAkBxG,KAAA,wCCAlBuG,EAAAC,QAAA,CAAkBzD,IAAA","file":"static/js/main.938950a0.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst setAuthToken = token => {\n    if (token) {\n        //Apply to every request\n        axios.defaults.headers.common['Authorization'] = token;\n    } else {\n        // Delete the auth header\n        delete axios.defaults.headers.common['Authorization'];\n    }\n}\n\nexport default setAuthToken;","import axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\nimport setAuthToken from '../utils/setAuthToken';\n\n// REGISTER USER\nexport const registerUser = (userData, history) => dispatch => {\n    axios.post('/api/sign-up', userData)\n        .then(res => history.push('/'))\n        .catch(err => dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        }))\n}\n\n// LOGIN USER\nexport const loginUser = userData => dispatch => {\n    axios.post('/api/login', userData)\n        .then(res => {\n            // Save to local storage\n            console.log(res.data);\n            const token = res.data.token;\n            // Set token to local storage\n            localStorage.setItem('jwt', token);\n            // Set taken to auth header\n            setAuthToken(token);\n            // Decode token to get user data\n            const decoded = jwt_decode(token);\n            // Set current user\n            dispatch(setCurrentUser(decoded))\n        })\n        .catch(err => {\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        })\n}\n\n// Set Logged in user \nexport const setCurrentUser = decoded => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: decoded\n    }\n}\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n    // Remove token from local storage\n    localStorage.removeItem('jwt');\n    // Remove the auth header for future requests\n    setAuthToken(false);\n    // Set current user to {} which will set isAuthenticated to false\n    dispatch(setCurrentUser({}));\n}","export const TEST_DISPATCH = 'TEST_DISPATCH';\nexport const GET_ERRORS = 'GET_ERRORS';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';","import { SET_CURRENT_USER } from '../actions/types'\n\nconst intialState = {\n    isAuthenticated: false,\n    user: {}\n}\n\nexport default function (state = intialState, action = {}) {\n    switch (action.type) {\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: Object.keys(action.payload).length !== 0 ? true : false,\n                user: action.payload\n            }\n        default: return state;\n    }\n}","import { GET_ERRORS } from '../actions/types';\n\nconst intialState = {};\n\nexport default function (state = intialState, action = {}) {\n    switch (action.type) {\n        case GET_ERRORS:\n            return action.payload\n        default: return state;\n    }\n}","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport errorReducer from './errorReducer';\n\nexport default combineReducers({\n    auth: authReducer,\n    errors: errorReducer\n})","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst middleware = [thunk]\nconst initalState = {}\n\nconst store = createStore(\n    rootReducer,\n    initalState,\n    compose(\n        applyMiddleware(...middleware),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\n\nexport default store;","import React from \"react\";\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../../actions/authActions';\nimport Classes from './navbar.module.css';\n\nconst navbar = props => {\n    const { isAuthenticated } = props.auth;\n    const onLogoutClick = () => {\n        props.history.push('/');\n        props.logoutUser();\n    }\n    return (\n        <nav className={Classes.navbar}>\n            <div className={Classes.navItems}>\n                <div><Link to=\"/\">Brand</Link></div>\n                <div className={Classes.div}>\n                    {!isAuthenticated ? <div><Link to={props.link}>{props.name}</Link></div> :\n                        <button\n                            onClick={onLogoutClick}\n                            style={{\n                                backgroundColor: 'transparent',\n                                fontFamily: 'inherit',\n                                color: 'inherit',\n                                border: 'none',\n                                fontSize: '1.1rem',\n                                cursor: 'pointer'\n                            }}>\n                            Signout\n                        </button>\n                    }\n                </div>\n            </div>\n        </nav>\n    )\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps, { logoutUser })(withRouter(navbar));","import React from \"react\";\nimport Classes from './footer.module.css';\n\nconst footer = props => {\n    return (\n        <footer className={Classes.footer}>\n            <p>Property of Utkarsh Srivastava &copy; {new Date().getFullYear()}</p>\n        </footer>\n    )\n};\n\nexport default footer;","import React from 'react';\nimport Classes from './input.module.css';\n\nconst input = props => (\n    <div style={{ display: props.display, width: props.width, marginRight: props.marginRight }}>\n        <label htmlFor={props.name} className={Classes.for}>{props.label}</label>\n        <input\n            type={props.type}\n            className={Classes.Input}\n            name={props.name}\n            onChange={e => props.press ? props.press(e.target.value, props.name) : null}\n        />\n    </div>\n);\n\nexport default input;","import React from 'react';\nimport Classes from './button.module.css'\nconst button = props => {\n    switch (props.type) {\n        case 'success':\n            return <button\n                className={Classes.success}\n                style={{ display: props.display }}\n                onClick={e => props.click(e)}>\n                {props.name}\n            </button>\n        case 'danger':\n            return <button\n                className={Classes.danger}\n                style={{ display: props.display }}\n                onClick={e => props.click(e)}>\n                {props.name}\n            </button>\n        default:\n            return <button\n                className={Classes.default}\n                style={{ display: props.display }}\n                onClick={e => props.click(e)}>\n                {props.name}\n            </button>\n    }\n}\n\nexport default button","import React from 'react';\nimport Classes from './form.module.css'\n\nconst form = props => (\n    <form className={Classes.Form} style={{ height: props.height, width: props.width }}>\n        {props.children}\n    </form>\n);\n\nexport default form;","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../../../actions/authActions';\nimport Classes from './login.module.css';\nimport Input from '../../../components/UI/Input/input';\nimport Button from '../../../components/UI/Button/button';\nimport Form from '../form';\n\nclass Login extends React.Component {\n    state = {\n        username: '',\n        password: '',\n        auth: false\n    }\n\n    componentDidMount() {\n        if (this.props.auth.isAuthenticated) {\n            this.props.history.push('/chatter');\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.auth.isAuthenticated) {\n            this.props.history.push('/chatter');\n        }\n\n        if (nextProps.errors) {\n            console.log(nextProps.errors);\n        }\n    }\n    // Submit button handler\n    submit = e => {\n        e.preventDefault();\n        this.props.loginUser({\n            username: this.state.username,\n            password: this.state.password\n        })\n    }\n\n    // Saves form info into the state\n    save = (text, type) => {\n        this.setState({ [type]: text });\n    }\n\n    render() {\n        return (\n            <div className={Classes.placeForm}>\n                <div className={Classes.image}>\n                    <div className={Classes.Welcome}>\n                        Welcome to the chatter.<br /> Connect to your friends around the globe.\n                    </div>\n                </div>\n                <Form height='30rem' width='80%' >\n                    <Helmet>\n                        <title>Login</title>\n                    </Helmet>\n                    <h2>Log In</h2>\n                    <div\n                        style={{ fontSize: '1rem', margin: '-0.5rem 0 1.5rem 0' }}>\n                        to continue to the Chatter app\n                    </div>\n                    <Input\n                        type='text'\n                        name='username'\n                        label='Username'\n                        press={this.save} />\n                    <Input\n                        type='password'\n                        name='password'\n                        label='Password'\n                        press={this.save} />\n                    <div>\n                        <Link\n                            to='/sign-up'\n                            style={{ textDecoration: 'none' }}>\n                            Don't have an account yet?\n                        </Link>\n                    </div>\n                    <Button name='Login' click={this.submit} />\n                    {this.state.auth ? <Redirect to='/chatter' /> : null}\n                </Form>\n            </div >\n        )\n    }\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n})\n\nexport default connect(mapStateToProps, { loginUser })(Login);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Classes from './signup.module.css';\nimport Input from '../../../components/UI/Input/input';\nimport Button from '../../../components/UI/Button/button';\nimport Form from '../form';\nimport { registerUser } from '../../../actions/authActions';\n\nclass SignUp extends React.Component {\n    state = {\n        username: '',\n        password: '',\n        password2: '',\n        match: true\n    }\n\n    componentDidMount() {\n        if (this.props.auth.isAuthenticated) {\n            this.props.history.push('/chatter');\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors)\n            console.log('OH MY GOD!!')\n    }\n\n    submit = e => {\n        e.preventDefault();\n        if (this.state.match)\n            this.props.registerUser({\n                username: this.state.username,\n                password: this.state.password\n            }, this.props.history);\n    }\n\n    inputCheck = () => {\n        if (this.state.password !== this.state.password2) {\n            this.setState({ match: false })\n        }\n        else {\n            this.setState({ match: true })\n        }\n    }\n\n    save = (text, type) => {\n        // Callback function will ensure that\n        // function call is made only after\n        // setState has finished updating the state\n        this.setState({ [type]: text }, () => {\n            if (type === 'password2')\n                this.inputCheck();\n        });\n    }\n\n    render() {\n        return (\n            <div className={Classes.placeForm}>\n                <Form height='38rem' width='80vw' >\n                    <Helmet>\n                        <title>SignUp</title>\n                    </Helmet>\n                    {this.state.match ? null :\n                        <div className={Classes.flash}>Passwords don't match</div>\n                    }\n                    <h2>Sign Up</h2>\n                    <div\n                        style={{ fontSize: '1rem', margin: '-0.5rem 0 1.5rem 0' }}>\n                        And enjoy our exclusive chat service for free!\n                    </div>\n                    <Input\n                        type='text'\n                        name='username'\n                        label='Username'\n                        press={this.save} />\n                    <Input\n                        type='password'\n                        name='password'\n                        label='Password'\n                        press={this.save} />\n                    <Input\n                        type='password'\n                        name='password2'\n                        label='Confirm Password'\n                        press={this.save} />\n                    <div>\n                        <Link\n                            to='/'\n                            style={{ textDecoration: 'none' }}>\n                            Already have an account?\n                        </Link>\n                    </div>\n                    <Button name='Sign Up' type='success' click={this.submit} />\n                </Form>\n            </div>\n        )\n    }\n};\n\nSignUp.propTypes = {\n    registerUser: propTypes.func.isRequired,\n    auth: propTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(mapStateToProps, { registerUser })(withRouter(SignUp));\n","import React from 'react';\nimport Classes from './message.module.css';\n\nexport default props => {\n    return (\n        <div className={Classes.msg}>\n            {props.children}\n        </div>\n    )\n}\n\n","import React from 'react';\nimport './friend.css';\n\nexport default props => {\n    return (\n        <div className='friend'>\n            {props.children}\n        </div>\n    )\n}\n\n","import React from 'react';\nimport Classes from './chatter.module.css';\nimport Input from '../components/UI/Input/input';\nimport Button from '../components/UI/Button/button';\nimport { connect } from 'react-redux';\nimport io from 'socket.io-client';\nimport Message from '../components/Message/message';\nimport Friend from '../components/Friend/friend';\n\nconst socket = io.connect('http://localhost:5000');\n\nconst connectToSocket = (sender, reciever) => {\n    socket.emit('connected', { sender, reciever });\n}\nconst privateChat = (sender, reciever, msg) => {\n    socket.emit('private', { private: msg, sender, reciever });\n}\n\nclass Chatter extends React.Component {\n    componentDidMount() {\n        socket.on('message', msg => {\n            this.setState((state, props) => {\n                return { message: state.messageLog.push(msg) }\n            });\n        });\n    }\n\n    state = {\n        reciever: '',\n        message: '',\n        messageLog: ['Hello', 'Hi'],\n        searchField: '',\n        friends: ['Friend1', 'Friend2', 'Friend1', 'Friend2', 'Friend1', 'Friend2']\n    }\n\n    press = (cnt, name) => {\n        console.log(name);\n        this.setState({ [name]: cnt });\n    }\n    // Initiate a session with a user\n    submit = e => {\n        connectToSocket(this.props.auth.user.username, this.state.reciever);\n    }\n    // Private messages\n    chat = e => {\n        privateChat(this.props.auth.user.username, this.state.reciever, this.state.message);\n    }\n    render() {\n        const messages = this.state.messageLog.map((val, i) => (\n            <Message key={i}>{val}</Message>\n        ))\n        return (\n            <div className={Classes.wrapper}>\n                <div className={Classes.list}>\n                    <input\n                        type='text'\n                        name='reciever'\n                        className={Classes.addFriends}\n                        placeholder='Search friends' />\n                    <div className={Classes.friends}>\n                        {this.state.friends.map((val, i) => (<Friend key={i}>{val}</Friend>))}\n                    </div>\n                </div>\n                <div className={Classes.view}>\n                    <div className={Classes.msgBlock}>\n                        {messages}\n                    </div>\n                    <div className={Classes.msgBox}>\n                        <Input\n                            type='text'\n                            name='message'\n                            label=''\n                            display='inline-block'\n                            width='75%'\n                            marginRight='1rem'\n                            press={this.press} />\n                        <Button\n                            type='success'\n                            name='Send Message'\n                            display='inline'\n                            click={this.chat} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n})\n\nexport default connect(mapStateToProps, null)(Chatter);","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Chatter from '../../containers/chatter';\n\nconst PrivateRoute = (auth) => (\n    <Route path='/chatter' render={props => auth.isAuthenticated ? <Chatter /> : <Redirect to='/' />} />\n);\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from './utils/setAuthToken';\nimport { setCurrentUser, logoutUser } from './actions/authActions';\nimport store from './store';\nimport Navbar from './components/Navbar/navbar';\nimport Footer from './components/Footer/footer';\nimport Login from './containers/Form/Login/login';\nimport SignUp from './containers/Form/SignUp/signup';\nimport PrivateRoute from \"./hoc/auth/PrivateRoute\";\nimport './App.css';\n\n// Check for token \nif (localStorage.getItem('jwt')) {\n  // Set auth token header auth\n  setAuthToken(localStorage.getItem('jwt'));\n\n  // Decode token and get user info\n  const decoded = jwt_decode(localStorage.getItem('jwt'));\n\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n\n  // Check for expired token\n  const currentTime = Date.now();\n  if (currentTime < decoded.exp) {\n    // Logout the user\n    store.dispatch(logoutUser());\n    // TODO: Clear current Profile\n    // Redirect to login\n    window.location.href = '/';\n  }\n}\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n\n            {/* Navbar renderin here */}\n            <Route path='/' exact render={() => <Navbar name='Sign Up' link='/sign-up' />} />\n            <Route path='/sign-up' exact render={() => <Navbar name='Login' link='/' />} />\n            <Switch>\n              <Route exact path='/chatter' render={() => <Navbar name='Signout' link='/' />} />\n            </Switch>\n\n            {/* Main Content here */}\n            <main className='container'>\n              <Route path='/' exact component={Login} />\n              <Route path='/sign-up' exact component={SignUp} />\n              <Switch>\n                <PrivateRoute exact path='/chatter' />\n              </Switch>\n            </main>\n\n            {/* Footer here - A static component */}\n            <Footer />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"chatter_wrapper__KRsEg\",\"list\":\"chatter_list__1LFmQ\",\"view\":\"chatter_view__1vJbZ\",\"addFriends\":\"chatter_addFriends__2Hw3Y\",\"msgBlock\":\"chatter_msgBlock__34ima\",\"msgBox\":\"chatter_msgBox__3JaTK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"navbar_navbar__1q8X2\",\"navItems\":\"navbar_navItems__1Wi18\",\"div\":\"navbar_div__355Pz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"placeForm\":\"login_placeForm__1pTeG\",\"image\":\"login_image__3fpwt\",\"Welcome\":\"login_Welcome__pm-bk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"button_default__WnKnV\",\"danger\":\"button_danger__1sY6T\",\"success\":\"button_success__3OsO1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"input_Input__DtkgV\",\"for\":\"input_for__1QN3l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"placeForm\":\"signup_placeForm__2z8P4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"footer_footer__Vr4ZL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"form_Form__16rR8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"msg\":\"message_msg__3weeh\"};"],"sourceRoot":""}