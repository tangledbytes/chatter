{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","components/Navbar/navbar.js","components/Footer/footer.js","components/UI/Input/input.js","components/UI/Button/button.js","containers/Form/form.js","containers/Form/Login/login.js","containers/Form/SignUp/signup.js","hoc/auth/PrivateRoute.js","components/Message/message.js","components/Friend/friend.js","containers/chatter.js","App.js","serviceWorker.js","index.js","containers/chatter.module.css","components/Navbar/navbar.module.css","containers/Form/Login/login.module.css","components/UI/Button/button.module.css","components/UI/Input/input.module.css","containers/Form/SignUp/signup.module.css","components/Footer/footer.module.css","containers/Form/form.module.css","components/Message/message.module.css"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","intialState","isAuthenticated","user","combineReducers","auth","state","arguments","length","undefined","action","Object","objectSpread","keys","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","connect","withRouter","props","react_default","a","createElement","className","Classes","navbar","navItems","react_router_dom","to","div","onClick","history","push","style","backgroundColor","fontFamily","color","border","fontSize","cursor","link","name","footer","Date","getFullYear","input","display","width","marginRight","htmlFor","for","label","value","message","Input","disabled","active","onChange","e","press","button","success","click","danger","default","form","Form","height","children","Login","username","password","submit","preventDefault","_this","loginUser","save","text","setState","defineProperty","this","nextProps","console","log","placeForm","image","Welcome","Form_form","Helmet","margin","Input_input","textDecoration","Button_button","react_router","React","Component","userData","post","then","res","data","setItem","jwt_decode","catch","err","response","SignUp","password2","match","registerUser","inputCheck","flash","auth_PrivateRoute","ComposedComponent","PrivateRoute","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","msg","Friend_friend","target","id","socket","io","privateChat","sender","reciever","emit","private","Chatter","recieveFriends","get","params","friends","map","messageLog","searchField","newFriend","setReciever","friend","chat","_this2","on","_this3","messages","val","i","wrapper","list","addFriends","placeholder","onKeyPress","view","nameField","msgBlock","msgBox","getItem","now","exp","location","href","App","es","path","exact","render","Navbar_navbar","component","Footer_footer","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.2ad159d7.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst setAuthToken = token => {\n    if (token) {\n        //Apply to every request\n        axios.defaults.headers.common['Authorization'] = token;\n    } else {\n        // Delete the auth header\n        delete axios.defaults.headers.common['Authorization'];\n    }\n}\n\nexport default setAuthToken;","import axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\nimport setAuthToken from '../utils/setAuthToken';\n\n// REGISTER USER\nexport const registerUser = (userData, history) => dispatch => {\n    axios.post('/api/sign-up', userData)\n        .then(res => history.push('/'))\n        .catch(err => dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        }))\n}\n\n// LOGIN USER\nexport const loginUser = userData => dispatch => {\n    axios.post('/api/login', userData)\n        .then(res => {\n            // Save to local storage\n            const token = res.data.token;\n            // Set token to local storage\n            localStorage.setItem('jwt', token);\n            // Set taken to auth header\n            setAuthToken(token);\n            // Decode token to get user data\n            const decoded = jwt_decode(token);\n            // Set current user\n            dispatch(setCurrentUser(decoded))\n        })\n        .catch(err => {\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        })\n}\n\n// Set Logged in user \nexport const setCurrentUser = decoded => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: decoded\n    }\n}\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n    // Remove token from local storage\n    localStorage.removeItem('jwt');\n    // Remove the auth header for future requests\n    setAuthToken(false);\n    // Set current user to {} which will set isAuthenticated to false\n    dispatch(setCurrentUser({}));\n}","export const TEST_DISPATCH = 'TEST_DISPATCH';\nexport const GET_ERRORS = 'GET_ERRORS';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';","import { SET_CURRENT_USER } from '../actions/types'\n\nconst intialState = {\n    isAuthenticated: false,\n    user: {}\n}\n\nexport default function (state = intialState, action = {}) {\n    switch (action.type) {\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: Object.keys(action.payload).length !== 0 ? true : false,\n                user: action.payload\n            }\n        default: return state;\n    }\n}","import { GET_ERRORS } from '../actions/types';\n\nconst intialState = {};\n\nexport default function (state = intialState, action = {}) {\n    switch (action.type) {\n        case GET_ERRORS:\n            return action.payload\n        default: return state;\n    }\n}","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport errorReducer from './errorReducer';\n\nexport default combineReducers({\n    auth: authReducer,\n    errors: errorReducer\n})","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst middleware = [thunk]\nconst initalState = {}\n\nconst store = createStore(\n    rootReducer,\n    initalState,\n    compose(\n        applyMiddleware(...middleware),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\n\nexport default store;","import React from \"react\";\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../../actions/authActions';\nimport Classes from './navbar.module.css';\n\nconst navbar = props => {\n    const { isAuthenticated } = props.auth;\n    const onLogoutClick = () => {\n        props.history.push('/');\n        props.logoutUser();\n    }\n    return (\n        <nav className={Classes.navbar}>\n            <div className={Classes.navItems}>\n                <div><Link to=\"/\">Brand</Link></div>\n                <div className={Classes.div}>\n                    {!isAuthenticated ? <div><Link to={props.link}>{props.name}</Link></div> :\n                        <button\n                            onClick={onLogoutClick}\n                            style={{\n                                backgroundColor: 'transparent',\n                                fontFamily: 'inherit',\n                                color: 'inherit',\n                                border: 'none',\n                                fontSize: '1.1rem',\n                                cursor: 'pointer'\n                            }}>\n                            Signout\n                        </button>\n                    }\n                </div>\n            </div>\n        </nav>\n    )\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps, { logoutUser })(withRouter(navbar));","import React from \"react\";\nimport Classes from './footer.module.css';\n\nconst footer = props => {\n    return (\n        <footer className={Classes.footer}>\n            <p>Property of Utkarsh Srivastava &copy; {new Date().getFullYear()}</p>\n        </footer>\n    )\n};\n\nexport default footer;","import React from 'react';\nimport Classes from './input.module.css';\n\nconst input = props => (\n    <div style={{ display: props.display, width: props.width, marginRight: props.marginRight }}>\n        <label htmlFor={props.name} className={Classes.for}>{props.label}</label>\n        <input\n            type={props.type}\n            value={props.message}\n            className={Classes.Input}\n            name={props.name}\n            disabled={props.active === false ? true : false}\n            onChange={e => props.press ? props.press(e, props.name) : null}\n        />\n    </div>\n);\n\nexport default input;","import React from 'react';\nimport Classes from './button.module.css'\nconst button = props => {\n    switch (props.type) {\n        case 'success':\n            return <button\n                className={Classes.success}\n                style={{ display: props.display }}\n                onClick={e => props.click(e)}>\n                {props.name}\n            </button>\n        case 'danger':\n            return <button\n                className={Classes.danger}\n                style={{ display: props.display }}\n                onClick={e => props.click(e)}>\n                {props.name}\n            </button>\n        default:\n            return <button\n                className={Classes.default}\n                style={{ display: props.display }}\n                onClick={e => props.click(e)}>\n                {props.name}\n            </button>\n    }\n}\n\nexport default button","import React from 'react';\nimport Classes from './form.module.css'\n\nconst form = props => (\n    <form className={Classes.Form} style={{ height: props.height, width: props.width }}>\n        {props.children}\n    </form>\n);\n\nexport default form;","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../../../actions/authActions';\nimport Classes from './login.module.css';\nimport Input from '../../../components/UI/Input/input';\nimport Button from '../../../components/UI/Button/button';\nimport Form from '../form';\n\nclass Login extends React.Component {\n    state = {\n        username: '',\n        password: '',\n        auth: false\n    }\n\n    componentDidMount() {\n        if (this.props.auth.isAuthenticated) {\n            this.props.history.push('/chatter');\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.auth.isAuthenticated) {\n            this.props.history.push('/chatter');\n        }\n\n        if (nextProps.errors) {\n            console.log(nextProps.errors);\n        }\n    }\n    // Submit button handler\n    submit = e => {\n        e.preventDefault();\n        this.props.loginUser({\n            username: this.state.username,\n            password: this.state.password\n        })\n    }\n\n    // Saves form info into the state\n    save = (text, type) => {\n        this.setState({ [type]: text });\n    }\n\n    render() {\n        return (\n            <div className={Classes.placeForm}>\n                <div className={Classes.image}>\n                    <div className={Classes.Welcome}>\n                        Welcome to the chatter.<br /> Connect to your friends around the globe.\n                    </div>\n                </div>\n                <Form height='30rem' width='80%' >\n                    <Helmet>\n                        <title>Login</title>\n                    </Helmet>\n                    <h2>Log In</h2>\n                    <div\n                        style={{ fontSize: '1rem', margin: '-0.5rem 0 1.5rem 0' }}>\n                        to continue to the Chatter app\n                    </div>\n                    <Input\n                        type='text'\n                        name='username'\n                        label='Username'\n                        press={this.save} />\n                    <Input\n                        type='password'\n                        name='password'\n                        label='Password'\n                        press={this.save} />\n                    <div>\n                        <Link\n                            to='/sign-up'\n                            style={{ textDecoration: 'none' }}>\n                            Don't have an account yet?\n                        </Link>\n                    </div>\n                    <Button name='Login' click={this.submit} />\n                    {this.state.auth ? <Redirect to='/chatter' /> : null}\n                </Form>\n            </div >\n        )\n    }\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n})\n\nexport default connect(mapStateToProps, { loginUser })(Login);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Classes from './signup.module.css';\nimport Input from '../../../components/UI/Input/input';\nimport Button from '../../../components/UI/Button/button';\nimport Form from '../form';\nimport { registerUser } from '../../../actions/authActions';\n\nclass SignUp extends React.Component {\n    state = {\n        username: '',\n        password: '',\n        password2: '',\n        match: true\n    }\n\n    componentDidMount() {\n        if (this.props.auth.isAuthenticated) {\n            this.props.history.push('/chatter');\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors)\n            console.log('OH MY GOD!!')\n    }\n\n    submit = e => {\n        e.preventDefault();\n        if (this.state.match)\n            this.props.registerUser({\n                username: this.state.username,\n                password: this.state.password\n            }, this.props.history);\n    }\n\n    inputCheck = () => {\n        if (this.state.password !== this.state.password2) {\n            this.setState({ match: false })\n        }\n        else {\n            this.setState({ match: true })\n        }\n    }\n\n    save = (text, type) => {\n        // Callback function will ensure that\n        // function call is made only after\n        // setState has finished updating the state\n        this.setState({ [type]: text }, () => {\n            if (type === 'password2')\n                this.inputCheck();\n        });\n    }\n\n    render() {\n        return (\n            <div className={Classes.placeForm}>\n                <Form height='38rem' width='80vw' >\n                    <Helmet>\n                        <title>SignUp</title>\n                    </Helmet>\n                    {this.state.match ? null :\n                        <div className={Classes.flash}>Passwords don't match</div>\n                    }\n                    <h2>Sign Up</h2>\n                    <div\n                        style={{ fontSize: '1rem', margin: '-0.5rem 0 1.5rem 0' }}>\n                        And enjoy our exclusive chat service for free!\n                    </div>\n                    <Input\n                        type='text'\n                        name='username'\n                        label='Username'\n                        press={this.save} />\n                    <Input\n                        type='password'\n                        name='password'\n                        label='Password'\n                        press={this.save} />\n                    <Input\n                        type='password'\n                        name='password2'\n                        label='Confirm Password'\n                        press={this.save} />\n                    <div>\n                        <Link\n                            to='/'\n                            style={{ textDecoration: 'none' }}>\n                            Already have an account?\n                        </Link>\n                    </div>\n                    <Button name='Sign Up' type='success' click={this.submit} />\n                </Form>\n            </div>\n        )\n    }\n};\n\nSignUp.propTypes = {\n    registerUser: propTypes.func.isRequired,\n    auth: propTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(mapStateToProps, { registerUser })(withRouter(SignUp));\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nexport default (ComposedComponent) => {\n    class PrivateRoute extends React.Component {\n        componentWillMount() {\n            if (!this.props.auth.isAuthenticated) {\n                this.props.history.push('/');\n            }\n        }\n        render() {\n            return (\n                <ComposedComponent {...this.props} />\n            )\n        }\n    }\n    const mapStateToProps = (state) => ({\n        auth: state.auth,\n    });\n    return connect(mapStateToProps)(withRouter(PrivateRoute));\n}","import React from 'react';\nimport Classes from './message.module.css';\n\nexport default props => {\n    return (\n        <div className={Classes.msg}>\n            {props.children}\n        </div>\n    )\n}\n\n","import React from 'react';\nimport './friend.css';\n\nexport default props => {\n    return (\n        <button className='friend' onClick={e => props.onClick(e.target.id)} id={props.id}>\n            {props.children}\n        </button>\n    )\n}\n\n","import React from 'react';\nimport axios from 'axios';\nimport { Helmet } from 'react-helmet';\nimport Classes from './chatter.module.css';\nimport Input from '../components/UI/Input/input';\nimport Button from '../components/UI/Button/button';\nimport { connect } from 'react-redux';\nimport io from 'socket.io-client';\nimport Message from '../components/Message/message';\nimport Friend from '../components/Friend/friend';\n\nconst socket = io.connect('http://localhost:5000');\n\n// Initiate connection the socket\nconst connectToSocket = sender => {\n    socket.emit('connected', sender);\n}\n// Send private messages\nconst privateChat = (sender, reciever, msg) => {\n    socket.emit('private', { private: msg, sender, reciever });\n}\n\nclass Chatter extends React.Component {\n    componentDidMount() {\n        // Making connection request to the server\n        connectToSocket(this.props.auth.user.username);\n\n        // Listening to private messages\n        socket.on('message', msg => {\n            this.setState((state, props) => {\n                return { message: state.messageLog.push(msg) }\n            });\n        });\n\n        // AJAX call to server to retrieve list of friends and messages\n        this.recieveFriends();\n    }\n\n    // Recieve list of friends from the server -- A protected route\n    recieveFriends = () => {\n        axios.get('/api/chatter/friends', { params: { username: this.props.auth.user } })\n            .then(res => this.setState({\n                friends: Object.keys(res.data).map(key => (\n                    [key, res.data[key]]\n                ))\n            }))\n            .catch(err => console.log(err));\n    }\n\n    state = {\n        reciever: '',\n        message: '',\n        messageLog: [],\n        searchField: '',\n        friends: [],\n        newFriend: '',\n    }\n\n    //Set the name the reciever of the messages\n    setReciever = reciever => {\n        console.log(reciever);\n        this.setState({ reciever });\n    }\n\n    // Add a new friend\n    newFriend = (e) => {\n        this.setState({ newFriend: e.target.value });\n        if (e.key === 'Enter') {\n            axios.post('/api/chatter/friends',\n                { friend: this.state.newFriend, username: this.props.auth.user.username })\n                .then(res => { console.log(res); this.recieveFriends(); })\n                .catch(err => console.log(err));\n            e.target.value = ''; // Clears the input field\n        }\n    }\n\n    //Dont know what this function does -- Basically I forgot\n    press = (e, name) => {\n        this.setState({ [name]: e.target.value });\n    }\n\n    // Send private messages --------- DO NOT TOUCH !\n    chat = e => {\n        privateChat(this.props.auth.user.username, this.state.reciever, this.state.message);\n    }\n\n    render() {\n        const messages = this.state.messageLog.map((val, i) => (\n            <Message key={i}>{val}</Message>\n        ))\n        return (\n            <div className={Classes.wrapper}>\n                <Helmet>\n                    <title>Chatter: Welcome to chatter</title>\n                </Helmet>\n\n                {/* List of friends */}\n                <div className={Classes.list}>\n                    <input\n                        type='text'\n                        name='reciever'\n                        className={Classes.addFriends}\n                        placeholder='Add username of your friend'\n                        onChange={this.newFriend}\n                        onKeyPress={this.newFriend} />\n                    <div className={Classes.friends}>\n                        {this.state.friends.map((val) => (\n                            <Friend key={val[0]} onClick={this.setReciever} id={val[0]}>\n                                {val[0]}\n                            </Friend>)\n                        )}\n                    </div>\n                </div>\n\n                {/* View for messages */}\n                <div className={Classes.view}>\n                    <div className={Classes.nameField}>\n                        {this.state.reciever}\n                    </div>\n                    <div className={Classes.msgBlock}>\n                        {messages}\n                    </div>\n\n                    {/* Message box */}\n                    <div className={Classes.msgBox}>\n                        <Input\n                            type='text'\n                            name='message'\n                            label=''\n                            value={this.state.message}\n                            display='inline-block'\n                            width='75%'\n                            marginRight='1rem'\n                            active={this.state.reciever ? true : false}\n                            press={this.press} />\n                        <Button\n                            type='success'\n                            name='Send Message'\n                            display='inline'\n                            click={this.chat} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n})\n\nexport default connect(mapStateToProps, null)(Chatter);","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from './utils/setAuthToken';\nimport { setCurrentUser, logoutUser } from './actions/authActions';\nimport store from './store';\nimport Navbar from './components/Navbar/navbar';\nimport Footer from './components/Footer/footer';\nimport Login from './containers/Form/Login/login';\nimport SignUp from './containers/Form/SignUp/signup';\nimport PrivateRoute from \"./hoc/auth/PrivateRoute\";\nimport Chatter from './containers/chatter';\nimport './App.css';\n\n// Check for token \nif (localStorage.getItem('jwt')) {\n  // Set auth token header auth\n  setAuthToken(localStorage.getItem('jwt'));\n\n  // Decode token and get user info\n  const decoded = jwt_decode(localStorage.getItem('jwt'));\n\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n  console.log(decoded)\n  // Check for expired token\n  const currentTime = Date.now();\n  if (currentTime < decoded.exp) {\n    // Logout the user\n    store.dispatch(logoutUser());\n    // TODO: Clear current Profile\n    // Redirect to login\n    window.location.href = '/';\n  }\n}\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n\n            {/* Navbar renderin here */}\n            <Route path='/' exact render={() => <Navbar name='Sign Up' link='/sign-up' />} />\n            <Route path='/sign-up' exact render={() => <Navbar name='Login' link='/' />} />\n            <Switch>\n              <Route exact path='/chatter' render={() => <Navbar name='Signout' link='/' />} />\n            </Switch>\n\n            {/* Main Content here */}\n            <main className='container'>\n              <Route path='/' exact component={Login} />\n              <Route path='/sign-up' exact component={SignUp} />\n              <Route exact path='/chatter' component={PrivateRoute(Chatter)} />\n            </main>\n\n            {/* Footer here - A static component */}\n            <Footer />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"chatter_wrapper__KRsEg\",\"list\":\"chatter_list__1LFmQ\",\"view\":\"chatter_view__1vJbZ\",\"addFriends\":\"chatter_addFriends__2Hw3Y\",\"nameField\":\"chatter_nameField__3XGu_\",\"msgBlock\":\"chatter_msgBlock__34ima\",\"msgBox\":\"chatter_msgBox__3JaTK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"navbar_navbar__1q8X2\",\"navItems\":\"navbar_navItems__1Wi18\",\"div\":\"navbar_div__355Pz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"placeForm\":\"login_placeForm__1pTeG\",\"image\":\"login_image__3fpwt\",\"Welcome\":\"login_Welcome__pm-bk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"button_default__WnKnV\",\"danger\":\"button_danger__1sY6T\",\"success\":\"button_success__3OsO1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"input_Input__DtkgV\",\"for\":\"input_for__1QN3l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"placeForm\":\"signup_placeForm__2z8P4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"footer_footer__Vr4ZL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"form_Form__16rR8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"msg\":\"message_msg__3weeh\"};"],"sourceRoot":""}