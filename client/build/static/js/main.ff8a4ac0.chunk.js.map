{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","components/Navbar/navbar.js","components/Footer/footer.js","components/UI/Input/input.js","components/UI/Button/button.js","containers/Form/form.js","containers/Form/Login/login.js","containers/Form/SignUp/signup.js","test.js","containers/main.js","App.js","serviceWorker.js","index.js","components/Navbar/navbar.module.css","containers/Form/Login/login.module.css","components/UI/Button/button.module.css","components/UI/Input/input.module.css","containers/Form/SignUp/signup.module.css","components/Footer/footer.module.css","containers/Form/form.module.css"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","intialState","isAuthenticated","user","combineReducers","auth","state","arguments","length","undefined","action","Object","objectSpread","keys","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","connect","withRouter","props","react_default","a","createElement","className","Classes","navbar","navItems","react_router_dom","to","div","onClick","history","push","style","backgroundColor","fontFamily","color","border","fontSize","cursor","link","name","footer","Date","getFullYear","input","htmlFor","for","label","Input","onChange","e","press","target","value","button","success","click","danger","default","form","Form","height","width","children","Login","username","password","submit","preventDefault","_this","loginUser","save","text","setState","defineProperty","this","nextProps","console","log","placeForm","image","Welcome","Form_form","Helmet","margin","Input_input","textDecoration","Button_button","react_router","React","Component","userData","post","then","res","data","setItem","jwt_decode","catch","err","response","SignUp","password2","match","registerUser","inputCheck","flash","socket","io","test","sender","reciever","emit","test2","msg","private","on","Main","message","cnt","chat","getItem","now","exp","window","location","href","App","es","path","exact","render","Navbar_navbar","component","Footer_footer","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.ff8a4ac0.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst setAuthToken = token => {\n    if (token) {\n        //Apply to every request\n        axios.defaults.headers.common['Authorization'] = token;\n    } else {\n        // Delete the auth header\n        delete axios.defaults.headers.common['Authorization'];\n    }\n}\n\nexport default setAuthToken;","import axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\nimport setAuthToken from '../utils/setAuthToken';\n\n// REGISTER USER\nexport const registerUser = (userData, history) => dispatch => {\n    axios.post('/api/sign-up', userData)\n        .then(res => history.push('/'))\n        .catch(err => dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        }))\n}\n\n// LOGIN USER\nexport const loginUser = userData => dispatch => {\n    axios.post('/api/login', userData)\n        .then(res => {\n            // Save to local storage\n            console.log(res.data);\n            const token = res.data.token;\n            // Set token to local storage\n            localStorage.setItem('jwt', token);\n            // Set taken to auth header\n            setAuthToken(token);\n            // Decode token to get user data\n            const decoded = jwt_decode(token);\n            // Set current user\n            dispatch(setCurrentUser(decoded))\n        })\n        .catch(err => {\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        })\n}\n\n// Set Logged in user \nexport const setCurrentUser = decoded => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: decoded\n    }\n}\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n    // Remove token from local storage\n    localStorage.removeItem('jwt');\n    // Remove the auth header for future requests\n    setAuthToken(false);\n    // Set current user to {} which will set isAuthenticated to false\n    dispatch(setCurrentUser({}));\n}","export const TEST_DISPATCH = 'TEST_DISPATCH';\nexport const GET_ERRORS = 'GET_ERRORS';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';","import { SET_CURRENT_USER } from '../actions/types'\n\nconst intialState = {\n    isAuthenticated: false,\n    user: {}\n}\n\nexport default function (state = intialState, action = {}) {\n    switch (action.type) {\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: Object.keys(action.payload).length !== 0 ? true : false,\n                user: action.payload\n            }\n        default: return state;\n    }\n}","import { GET_ERRORS } from '../actions/types';\n\nconst intialState = {};\n\nexport default function (state = intialState, action = {}) {\n    switch (action.type) {\n        case GET_ERRORS:\n            return action.payload\n        default: return state;\n    }\n}","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport errorReducer from './errorReducer';\n\nexport default combineReducers({\n    auth: authReducer,\n    errors: errorReducer\n})","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst middleware = [thunk]\nconst initalState = {}\n\nconst store = createStore(\n    rootReducer,\n    initalState,\n    compose(\n        applyMiddleware(...middleware),\n        // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\n\nexport default store;","import React from \"react\";\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../../actions/authActions';\nimport Classes from './navbar.module.css';\n\nconst navbar = props => {\n    const { isAuthenticated } = props.auth;\n    const onLogoutClick = () => {\n        props.history.push('/');\n        props.logoutUser();\n    }\n    return (\n        <nav className={Classes.navbar}>\n            <div className={Classes.navItems}>\n                <div><Link to=\"/\">Brand</Link></div>\n                <div className={Classes.div}>\n                    {!isAuthenticated ? <div><Link to={props.link}>{props.name}</Link></div> :\n                        <button\n                            onClick={onLogoutClick}\n                            style={{\n                                backgroundColor: 'transparent',\n                                fontFamily: 'inherit',\n                                color: 'inherit',\n                                border: 'none',\n                                fontSize: '1.1rem',\n                                cursor: 'pointer'\n                            }}>\n                            Signout\n                        </button>\n                    }\n                </div>\n            </div>\n        </nav>\n    )\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps, { logoutUser })(withRouter(navbar));","import React from \"react\";\nimport Classes from './footer.module.css';\n\nconst footer = props => {\n    return (\n        <footer className={Classes.footer}>\n            <p>Property of Utkarsh Srivastava &copy; {new Date().getFullYear()}</p>\n        </footer>\n    )\n};\n\nexport default footer;","import React from 'react';\nimport Classes from './input.module.css';\n\nconst input = props => (\n    <div>\n        <label htmlFor={props.name} className={Classes.for}>{props.label}</label>\n        <input\n            type={props.type}\n            className={Classes.Input}\n            name={props.name}\n            onChange={e => props.press ? props.press(e.target.value, props.name) : null}\n        />\n    </div>\n);\n\nexport default input;","import React from 'react';\nimport Classes from './button.module.css'\nconst button = props => {\n    switch (props.type) {\n        case 'success':\n            return <button className={Classes.success} onClick={e => props.click(e)}>{props.name}</button>\n        case 'danger':\n            return <button className={Classes.danger} onClick={e => props.click(e)}>{props.name}</button>\n        default:\n            return <button className={Classes.default} onClick={e => props.click(e)}>{props.name}</button>\n    }\n}\n\nexport default button","import React from 'react';\nimport Classes from './form.module.css'\n\nconst form = props => (\n    <form className={Classes.Form} style={{ height: props.height, width: props.width }}>\n        {props.children}\n    </form>\n);\n\nexport default form;","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../../../actions/authActions';\nimport Classes from './login.module.css';\nimport Input from '../../../components/UI/Input/input';\nimport Button from '../../../components/UI/Button/button';\nimport Form from '../form';\n\nclass Login extends React.Component {\n    state = {\n        username: '',\n        password: '',\n        auth: false\n    }\n\n    componentDidMount() {\n        if (this.props.auth.isAuthenticated) {\n            this.props.history.push('/chatter');\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.auth.isAuthenticated) {\n            this.props.history.push('/chatter');\n        }\n\n        if (nextProps.errors) {\n            console.log(nextProps.errors);\n        }\n    }\n    // Submit button handler\n    submit = e => {\n        e.preventDefault();\n        this.props.loginUser({\n            username: this.state.username,\n            password: this.state.password\n        })\n    }\n\n    // Saves form info into the state\n    save = (text, type) => {\n        this.setState({ [type]: text });\n    }\n\n    render() {\n        return (\n            <div className={Classes.placeForm}>\n                <div className={Classes.image}>\n                    <div className={Classes.Welcome}>\n                        Welcome to the chatter.<br /> Connect to your friends around the globe.\n                    </div>\n                </div>\n                <Form height='24rem' width='15vw' >\n                    <Helmet>\n                        <title>Login</title>\n                    </Helmet>\n                    <h2>Log In</h2>\n                    <div\n                        style={{ fontSize: '1rem', margin: '-0.5rem 0 1.5rem 0' }}>\n                        to continue to the Chatter app\n                    </div>\n                    <Input\n                        type='text'\n                        name='username'\n                        label='Username'\n                        press={this.save} />\n                    <Input\n                        type='password'\n                        name='password'\n                        label='Password'\n                        press={this.save} />\n                    <div>\n                        <Link\n                            to='/sign-up'\n                            style={{ textDecoration: 'none' }}>\n                            Don't have an account yet?\n                        </Link>\n                    </div>\n                    <Button name='Login' click={this.submit} />\n                    {this.state.auth ? <Redirect to='/chatter' /> : null}\n                </Form>\n            </div >\n        )\n    }\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n})\n\nexport default connect(mapStateToProps, { loginUser })(Login);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Classes from './signup.module.css';\nimport Input from '../../../components/UI/Input/input';\nimport Button from '../../../components/UI/Button/button';\nimport Form from '../form';\nimport { registerUser } from '../../../actions/authActions';\n\nclass SignUp extends React.Component {\n    state = {\n        username: '',\n        password: '',\n        password2: '',\n        match: true\n    }\n\n    componentDidMount() {\n        if (this.props.auth.isAuthenticated) {\n            this.props.history.push('/chatter');\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors)\n            console.log('OH MY GOD!!')\n    }\n\n    submit = e => {\n        e.preventDefault();\n        if (this.state.match)\n            this.props.registerUser({\n                username: this.state.username,\n                password: this.state.password\n            }, this.props.history);\n    }\n\n    inputCheck = () => {\n        if (this.state.password !== this.state.password2) {\n            this.setState({ match: false })\n        }\n        else {\n            this.setState({ match: true })\n        }\n    }\n\n    save = (text, type) => {\n        // Callback function will ensure that\n        // function call is made only after\n        // setState has finished updating the state\n        this.setState({ [type]: text }, () => {\n            if (type === 'password2')\n                this.inputCheck();\n        });\n    }\n\n    render() {\n        return (\n            <div className={Classes.placeForm}>\n                <Form height='32rem' width='20vw' >\n                    <Helmet>\n                        <title>SignUp</title>\n                    </Helmet>\n                    {this.state.match ? null :\n                        <div className={Classes.flash}>Passwords don't match</div>\n                    }\n                    <h2>Sign Up</h2>\n                    <div\n                        style={{ fontSize: '1rem', margin: '-0.5rem 0 1.5rem 0' }}>\n                        And enjoy our exclusive chat service for free!\n                    </div>\n                    <Input\n                        type='text'\n                        name='username'\n                        label='Username'\n                        press={this.save} />\n                    <Input\n                        type='password'\n                        name='password'\n                        label='Password'\n                        press={this.save} />\n                    <Input\n                        type='password'\n                        name='password2'\n                        label='Confirm Password'\n                        press={this.save} />\n                    <div>\n                        <Link\n                            to='/'\n                            style={{ textDecoration: 'none' }}>\n                            Already have an account?\n                        </Link>\n                    </div>\n                    <Button name='Sign Up' type='success' click={this.submit} />\n                </Form>\n            </div>\n        )\n    }\n};\n\nSignUp.propTypes = {\n    registerUser: propTypes.func.isRequired,\n    auth: propTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(mapStateToProps, { registerUser })(withRouter(SignUp));\n","import io from 'socket.io-client';\nconst socket = io.connect('http://localhost:5000');\n\nconst test = (sender, reciever) => {\n    socket.emit('connected', { sender, reciever });\n}\n\nconst test2 = (sender, reciever, msg) => {\n    socket.emit('private', { private: msg, sender, reciever });\n    socket.on('hey', msg => console.log(msg));\n}\n\nexport { test, test2 }","import React from 'react';\nimport Input from '../components/UI/Input/input';\nimport Button from '../components/UI/Button/button';\nimport { connect } from 'react-redux';\nimport { test, test2 } from '../test';\n// import io from 'socket.io-client';\n// io.connect('http://localhost:5000');\n\n// test2();\nclass Main extends React.Component {\n    state = {\n        reciever: '',\n        message: ''\n    }\n    press = (cnt, name) => {\n        // test(cnt, this, this.props.auth.user.username);\n        this.setState({ [name]: cnt }, () => console.log(this.state));\n    }\n    submit = e => {\n        test(this.props.auth.user.username, this.state.reciever);\n    }\n    chat = e => {\n        console.log('test');\n        test2(this.props.auth.user.username, this.state.reciever, this.state.message);\n    }\n    render() {\n        return (\n            <div>\n                <Input type='text' name='reciever' label='Reciever' press={this.press} />\n                <Input type='text' name='message' label='Messsage' press={this.press} />\n                <Button type='success' name='Initiate' click={this.submit} />\n                <Button type='success' name='Send Message' click={this.chat} />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n})\n\nexport default connect(mapStateToProps, null)(Main);","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from './utils/setAuthToken';\nimport { setCurrentUser, logoutUser } from './actions/authActions';\nimport store from './store';\nimport Navbar from './components/Navbar/navbar';\nimport Footer from './components/Footer/footer';\nimport Login from './containers/Form/Login/login';\nimport SignUp from './containers/Form/SignUp/signup';\nimport Main from './containers/main';\nimport './App.css';\n\n// Check for token \nif (localStorage.getItem('jwt')) {\n  // Set auth token header auth\n  setAuthToken(localStorage.getItem('jwt'));\n\n  // Decode token and get user info\n  const decoded = jwt_decode(localStorage.getItem('jwt'));\n\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n\n  // Check for expired token\n  const currentTime = Date.now();\n  if (currentTime < decoded.exp) {\n    // Logout the user\n    store.dispatch(logoutUser());\n    // TODO: Clear current Profile\n    // Redirect to login\n    window.location.href = '/';\n  }\n}\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n\n            {/* Navbar renderin here */}\n            <Route path='/' exact render={() => <Navbar name='Sign Up' link='/sign-up' />} />\n            <Route path='/sign-up' exact render={() => <Navbar name='Login' link='/' />} />\n            <Route path='/chatter' exact render={() => <Navbar name='Signout' link='/' />} />\n\n            {/* Main Content here */}\n            <main className='container'>\n              <Route path='/' exact component={Login} />\n              <Route path='/sign-up' exact component={SignUp} />\n              <Route path='/chatter' exact component={Main} />\n            </main>\n\n            {/* Footer here - A static component */}\n            <Footer />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"navbar_navbar__1q8X2\",\"navItems\":\"navbar_navItems__1Wi18\",\"div\":\"navbar_div__355Pz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"placeForm\":\"login_placeForm__1pTeG\",\"image\":\"login_image__3fpwt\",\"Welcome\":\"login_Welcome__pm-bk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"button_default__WnKnV\",\"danger\":\"button_danger__1sY6T\",\"success\":\"button_success__3OsO1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"input_Input__DtkgV\",\"for\":\"input_for__1QN3l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"placeForm\":\"signup_placeForm__2z8P4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"footer_footer__Vr4ZL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"form_Form__16rR8\"};"],"sourceRoot":""}