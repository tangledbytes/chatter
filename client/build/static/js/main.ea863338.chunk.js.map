{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","components/Navbar/links.js","components/Navbar/navbar.js","components/Footer/footer.js","components/UI/Input/input.js","components/UI/Button/button.js","containers/Form/form.js","containers/Form/Login/login.js","containers/Form/SignUp/signup.js","hoc/auth/PrivateRoute.js","components/Message/message.js","components/Friend/friend.js","containers/chatter.js","components/404/404.js","App.js","serviceWorker.js","index.js","containers/chatter.module.css","containers/Form/Login/login.module.css","components/Navbar/navbar.module.css","components/UI/Button/button.module.css","containers/Form/SignUp/signup.module.css","components/Message/message.module.css","components/UI/Input/input.module.css","components/Footer/footer.module.css","containers/Form/form.module.css"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","intialState","isAuthenticated","user","combineReducers","auth","state","arguments","length","undefined","action","Object","objectSpread","keys","errors","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","apply","links","props","react_default","a","createElement","react_router_dom","to","children","connect","withRouter","className","Classes","navbar","navItems","div","onClick","history","push","style","backgroundColor","fontFamily","color","border","fontSize","cursor","outline","link","name","footer","Date","getFullYear","input","display","width","marginRight","htmlFor","for","label","ref","refs","value","message","Input","disabled","active","onChange","e","press","button","success","click","danger","default","form","Form","height","margin","Login","username","password","submit","preventDefault","_this","loginUser","save","setState","defineProperty","target","this","nextProps","console","log","placeForm","image","Welcome","Form_form","Helmet","error","flash","Input_input","textDecoration","Button_button","react_router","React","Component","userData","post","then","res","data","setItem","jwt_decode","catch","err","response","SignUp","password2","match","registerUser","inputCheck","auth_PrivateRoute","ComposedComponent","PrivateRoute","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","by","msg_out","msg_in","msg","Friend_friend","id","socket","io","privateChat","sender","reciever","emit","Chatter","recieveFriends","get","params","friends","messageLog","searchField","newFriend","showChatsMob","textInput","createRef","messageEnd","setReciever","window","screen","friend","chat","prevState","current","show","_this2","on","_this3","wrapper","list","addFriends","placeholder","onKeyPress","map","val","i","view","nameField","chatter_mob","concat","msgBlock","msgBox","_404_404","getItem","now","exp","location","href","App","es","path","exact","render","Navbar_navbar","component","NotFound404","Footer_footer","PureComponent","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.ea863338.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst setAuthToken = token => {\n    if (token) {\n        //Apply to every request\n        axios.defaults.headers.common['Authorization'] = token;\n    } else {\n        // Delete the auth header\n        delete axios.defaults.headers.common['Authorization'];\n    }\n}\n\nexport default setAuthToken;","import axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\nimport setAuthToken from '../utils/setAuthToken';\n\n// REGISTER USER\nexport const registerUser = (userData, history) => dispatch => {\n    axios.post('/api/sign-up', userData)\n        .then(res => history.push('/'))\n        .catch(err => dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        }))\n}\n\n// LOGIN USER\nexport const loginUser = userData => dispatch => {\n    axios.post('/api/login', userData)\n        .then(res => {\n            console.log(res.data);\n            // Save to local storage\n            const token = res.data.token;\n            // Set token to local storage\n            localStorage.setItem('jwt', token);\n            // Set taken to auth header\n            setAuthToken(token);\n            // Decode token to get user data\n            const decoded = jwt_decode(token);\n            // Set current user\n            dispatch(setCurrentUser(decoded))\n        })\n        .catch(err => {\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        })\n}\n\n// Set Logged in user \nexport const setCurrentUser = decoded => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: decoded\n    }\n}\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n    // Remove token from local storage\n    localStorage.removeItem('jwt');\n    // Remove the auth header for future requests\n    setAuthToken(false);\n    // Set current user to {} which will set isAuthenticated to false\n    dispatch(setCurrentUser({}));\n}","export const TEST_DISPATCH = 'TEST_DISPATCH';\nexport const GET_ERRORS = 'GET_ERRORS';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';","import { SET_CURRENT_USER } from '../actions/types'\n\nconst intialState = {\n    isAuthenticated: false,\n    user: {}\n}\n\nexport default function (state = intialState, action = {}) {\n    switch (action.type) {\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: Object.keys(action.payload).length !== 0 ? true : false,\n                user: action.payload\n            }\n        default: return state;\n    }\n}","import { GET_ERRORS } from '../actions/types';\n\nconst intialState = {};\n\nexport default function (state = intialState, action = {}) {\n    switch (action.type) {\n        case GET_ERRORS:\n            return action.payload\n        default: return state;\n    }\n}","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport errorReducer from './errorReducer';\n\nexport default combineReducers({\n    auth: authReducer,\n    errors: errorReducer\n})","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducers';\n\nconst middleware = [thunk]\nconst initalState = {}\n\nconst store = createStore(\n    rootReducer,\n    initalState,\n    composeWithDevTools(\n        applyMiddleware(...middleware)\n    )\n);\n\nexport default store;","import React from 'react'\nimport { Link } from 'react-router-dom';\nexport default props => {\n    return (\n        <div>\n            <Link to={props.to}>{props.children}</Link>\n        </div>\n    )\n}\n","import React from \"react\";\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../../actions/authActions';\nimport Links from './links';\nimport Classes from './navbar.module.css';\n\nconst navbar = props => {\n    const { isAuthenticated } = props.auth;\n    const onLogoutClick = () => {\n        props.history.push('/');\n        props.logoutUser();\n    }\n    return (\n        <nav className={Classes.navbar}>\n            <div className={Classes.navItems}>\n                <div><Link to=\"/\">Chatter</Link></div>\n                <div className={Classes.div}>\n                    {!isAuthenticated ? <Links to={props.link}>{props.name}</Links> :\n                        <button\n                            onClick={onLogoutClick}\n                            style={{\n                                backgroundColor: 'transparent',\n                                fontFamily: 'inherit',\n                                color: 'inherit',\n                                border: 'none',\n                                fontSize: '1.1rem',\n                                cursor: 'pointer',\n                                outline: 'none'\n                            }}>\n                            Logout\n                        </button>\n                    }\n                </div>\n            </div>\n        </nav>\n    )\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps, { logoutUser })(withRouter(navbar));","import React from \"react\";\nimport Classes from './footer.module.css';\n\nconst footer = props => {\n    return (\n        <footer className={Classes.footer}>\n            <p>Property of Utkarsh Srivastava &copy; {new Date().getFullYear()}</p>\n        </footer>\n    )\n};\n\nexport default footer;","import React from 'react';\nimport Classes from './input.module.css';\n\nconst input = props => (\n    <div style={{ display: props.display, width: props.width, marginRight: props.marginRight }}>\n        <label htmlFor={props.name} className={Classes.for}>{props.label}\n            <input\n                ref={props.refs ? props.refs : null}\n                type={props.type}\n                value={props.message}\n                className={Classes.Input}\n                name={props.name}\n\n                disabled={props.active === false ? true : false}\n                onChange={e => props.press ? props.press(e, props.name) : null}\n            />\n        </label>\n    </div>\n);\n\nexport default input;","import React from 'react';\nimport Classes from './button.module.css'\nconst button = props => {\n    switch (props.type) {\n        case 'success':\n            return <button\n                className={Classes.success}\n                style={{ display: props.display }}\n                onClick={e => props.click(e)}>\n                {props.name}\n            </button>\n        case 'danger':\n            return <button\n                className={Classes.danger}\n                style={{ display: props.display }}\n                onClick={e => props.click(e)}>\n                {props.name}\n            </button>\n        default:\n            return <button\n                className={Classes.default}\n                style={{ display: props.display }}\n                onClick={e => props.click(e)}>\n                {props.name}\n            </button>\n    }\n}\n\nexport default button","import React from 'react';\nimport Classes from './form.module.css'\n\nconst form = props => (\n    <form className={Classes.Form} style={{ height: props.height, width: props.width, margin: '1rem 0' }}>\n        {props.children}\n    </form>\n);\n\nexport default form;","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../../../actions/authActions';\nimport Classes from './login.module.css';\nimport Input from '../../../components/UI/Input/input';\nimport Button from '../../../components/UI/Button/button';\nimport Form from '../form';\n\nclass Login extends React.Component {\n    state = {\n        username: '',\n        password: '',\n        auth: false\n    }\n\n    componentDidMount() {\n        if (this.props.auth.isAuthenticated) {\n            this.props.history.push('/chatter');\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.auth.isAuthenticated) {\n            this.props.history.push('/chatter');\n        }\n\n        else if (nextProps.errors) {\n            console.log(nextProps.errors);\n        }\n    }\n    // Submit button handler\n    submit = e => {\n        e.preventDefault();\n        this.props.loginUser({\n            username: this.state.username,\n            password: this.state.password\n        })\n    }\n\n    // Saves form info into the state\n    save = (e, type) => {\n        this.setState({ [type]: e.target.value });\n    }\n\n    render() {\n        return (\n            <div className={Classes.placeForm}>\n                <div className={Classes.image}>\n                    <div className={Classes.Welcome}>\n                        Welcome to the chatter.<br /> Connect to your friends around the globe.\n                    </div>\n                </div>\n                <Form height='30rem' width='80%' >\n                    <Helmet>\n                        <title>Chatter: Login</title>\n                    </Helmet>\n                    {this.props.errors.error ? <div className={Classes.flash}>{this.props.errors.error}</div> : null}\n                    <h2>Log In</h2>\n                    <div\n                        style={{ fontSize: '1rem', margin: '-0.5rem 0 1.5rem 0' }}>\n                        to continue to the Chatter app\n                    </div>\n                    <Input\n                        type='text'\n                        name='username'\n                        label='Username'\n                        press={this.save} />\n                    <Input\n                        type='password'\n                        name='password'\n                        label='Password'\n                        press={this.save} />\n                    <div>\n                        <Link\n                            to='/sign-up'\n                            style={{ textDecoration: 'none' }}>\n                            Don't have an account yet?\n                        </Link>\n                    </div>\n                    <Button name='Login' click={this.submit} />\n                    {this.state.auth ? <Redirect to='/chatter' /> : null}\n                </Form>\n            </div >\n        )\n    }\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n})\n\nexport default connect(mapStateToProps, { loginUser })(Login);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Classes from './signup.module.css';\nimport Input from '../../../components/UI/Input/input';\nimport Button from '../../../components/UI/Button/button';\nimport Form from '../form';\nimport { registerUser } from '../../../actions/authActions';\n\nclass SignUp extends React.Component {\n    state = {\n        username: '',\n        password: '',\n        password2: '',\n        match: true\n    }\n\n    componentDidMount() {\n        if (this.props.auth.isAuthenticated) {\n            this.props.history.push('/chatter');\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors)\n            console.log(nextProps.errors);\n    }\n\n    submit = e => {\n        e.preventDefault();\n        if (this.state.match && this.state.username)\n            this.props.registerUser({\n                username: this.state.username,\n                password: this.state.password\n            }, this.props.history);\n    }\n\n    inputCheck = () => {\n        if (this.state.password !== this.state.password2) {\n            this.setState({ match: false })\n        }\n        else {\n            this.setState({ match: true })\n        }\n    }\n\n    save = (e, type) => {\n        // Callback function will ensure that\n        // function call is made only after\n        // setState has finished updating the state\n        this.setState({ [type]: e.target.value }, () => {\n            if (type === 'password2')\n                this.inputCheck();\n        });\n    }\n\n    render() {\n        return (\n            <div className={Classes.placeForm}>\n                <Form height='90%' width='80vw' >\n                    <Helmet>\n                        <title>SignUp</title>\n                    </Helmet>\n                    {this.props.errors.errors ? <div className={Classes.flash}>{this.props.errors.errors}</div> : null}\n                    {this.state.match ? null :\n                        <div className={Classes.flash}>Passwords don't match</div>\n                    }\n                    <h2>Sign Up</h2>\n                    <div\n                        style={{ fontSize: '1rem', margin: '-0.5rem 0 1.5rem 0' }}>\n                        And enjoy our exclusive chat service for free!\n                    </div>\n                    <Input\n                        type='text'\n                        name='username'\n                        label='Username'\n                        press={this.save} />\n                    <Input\n                        type='password'\n                        name='password'\n                        label='Password'\n                        press={this.save} />\n                    <Input\n                        type='password'\n                        name='password2'\n                        label='Confirm Password'\n                        press={this.save} />\n                    <div>\n                        <Link\n                            to='/'\n                            style={{ textDecoration: 'none' }}>\n                            Already have an account?\n                        </Link>\n                    </div>\n                    <Button name='Sign Up' type='success' click={this.submit} />\n                </Form>\n            </div>\n        )\n    }\n};\n\nSignUp.propTypes = {\n    registerUser: propTypes.func.isRequired,\n    auth: propTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(mapStateToProps, { registerUser })(withRouter(SignUp));\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nexport default (ComposedComponent) => {\n    class PrivateRoute extends React.Component {\n        componentWillMount() {\n            if (!this.props.auth.isAuthenticated) {\n                this.props.history.push('/');\n            }\n        }\n        render() {\n            return (\n                <ComposedComponent {...this.props} />\n            )\n        }\n    }\n    const mapStateToProps = (state) => ({\n        auth: state.auth,\n    });\n    return connect(mapStateToProps)(withRouter(PrivateRoute));\n}","import React from 'react';\nimport Classes from './message.module.css';\n\nexport default props => {\n    const className = props.by ? Classes.msg_out : Classes.msg_in;\n    return (\n        <div className={Classes.msg}>\n            <div className={className}>\n                <div>\n                    {props.children}\n                </div>\n            </div>\n        </div>\n    )\n}\n\n","import React from 'react';\nimport './friend.css';\n\nexport default props => {\n    return (\n        <button className='friend' onClick={e => props.onClick(e.target.id)} id={props.id}>\n            {props.children}\n        </button>\n    )\n}\n\n","import React from 'react';\nimport axios from 'axios';\nimport { Helmet } from 'react-helmet';\nimport Classes from './chatter.module.css';\nimport Input from '../components/UI/Input/input';\nimport Button from '../components/UI/Button/button';\nimport { connect } from 'react-redux';\nimport io from 'socket.io-client';\nimport Message from '../components/Message/message';\nimport Friend from '../components/Friend/friend';\n\nconst socket = io.connect('/');\n\n// Initiate connection the socket\nconst connectToSocket = sender => {\n    socket.emit('connected', sender);\n}\n// Send private messages\nconst privateChat = (sender, reciever, msg) => {\n    socket.emit('private', { message: msg, sender, reciever });\n}\n\nclass Chatter extends React.Component {\n    componentDidMount() {\n        // Making connection request to the server\n        connectToSocket(this.props.auth.user.username);\n\n        // Listening to private messages\n        socket.on('message', msg => {\n            this.setState((prevState, props) => {\n                const target = this.state.friends[msg.sender];\n                return { [target]: prevState.friends[msg.sender].push(msg) }\n            });\n        });\n\n        // AJAX call to server to retrieve list of friends and messages\n        this.recieveFriends();\n    }\n\n    // Recieve list of friends from the server -- A protected route\n    recieveFriends = () => {\n        axios.get('/api/chatter/friends', { params: { username: this.props.auth.user } })\n            .then(res => this.setState({ friends: res.data }))\n            .catch(err => console.log(err));\n    }\n\n    state = {\n        reciever: '',\n        message: '',\n        messageLog: [],\n        searchField: '',\n        friends: {},\n        newFriend: '',\n        showChatsMob: false\n    }\n\n    // Refs\n    textInput = React.createRef();\n    messageEnd = React.createRef();\n\n    //Set the name the reciever of the messages\n    setReciever = reciever => {\n        this.setState({ reciever });\n        if (window.screen.width <= 800)\n            // Show messages on mobile view\n            this.setState({ showChatsMob: true })\n    }\n\n    // Add a new friend\n    newFriend = (e) => {\n        this.setState({ newFriend: e.target.value });\n        if (e.key === 'Enter') {\n            axios.post('/api/chatter/friends',\n                { friend: this.state.newFriend, username: this.props.auth.user.username })\n                .then(res => { console.log(res); this.recieveFriends(); })\n                .catch(err => console.log(err));\n            e.target.value = ''; // Clears the input field\n        }\n    }\n\n    press = (e, name) => {\n        this.setState({ [name]: e.target.value });\n    }\n\n    // Send private messages --------- DO NOT TOUCH !\n    chat = e => {\n        if (this.state.message) {\n            privateChat(this.props.auth.user.username, this.state.reciever, this.state.message);\n            this.setState((prevState, props) => {\n                const target = this.state.friends[this.state.reciever];\n                return {\n                    [target]: prevState.friends[prevState.reciever].push({\n                        sender: this.props.auth.user.username,\n                        reciever: prevState.reciever,\n                        message: prevState.message\n                    })\n                }\n            });\n            this.textInput.current.value = '';\n            this.setState({ message: '' });\n        }\n    }\n\n    // Back - button in mobile view\n    show = () => {\n        this.setState({ showChatsMob: false });\n    }\n\n    render() {\n        return (\n            <div className={Classes.wrapper}>\n                <Helmet>\n                    <title>Chatter: Welcome to chatter</title>\n                </Helmet>\n\n                {/* List of friends */}\n                <div className={Classes.list}\n                    style={!this.state.showChatsMob ? { display: 'inherit' } : { display: 'none' }}>\n                    <input\n                        type='text'\n                        name='reciever'\n                        className={Classes.addFriends}\n                        placeholder='Add username of your friend'\n                        onChange={this.newFriend}\n                        onKeyPress={this.newFriend} />\n                    <div className={Classes.friends}>\n                        {Object.keys(this.state.friends).map((val, i) => (\n                            <Friend key={i} onClick={this.setReciever} id={val}>\n                                {val}\n                            </Friend>)\n                        )}\n                    </div>\n                </div>\n\n                {/* View for messages */}\n                <div className={Classes.view}\n                    style={this.state.showChatsMob ? { display: 'inherit' } : null}>\n                    <div className={Classes.nameField}>\n                        <div>\n                            <button className={Classes.chatter_mob}\n                                onClick={this.show}\n                                style={{\n                                    border: 'none',\n                                    outline: 'none',\n                                    backgroundColor: 'transparent',\n                                    color: 'white'\n                                }}>Back</button></div>\n                        {\n                            this.state.reciever ?\n                                `You are talking to \"${this.state.reciever}\"` :\n                                `Start talking to friends right now! It's elegant!`\n                        }\n                    </div>\n                    <div className={Classes.msgBlock}>\n                        {\n                            this.state.friends[this.state.reciever] ?\n                                this.state.friends[this.state.reciever].map((val, i) => (\n                                    <Message key={i}\n                                        by={val.sender === this.props.auth.user.username ? 1 : 0}\n                                        refs={this.messageEnd}>\n                                        {val.message}\n                                    </Message>\n                                )) : null\n                        }\n                    </div>\n\n                    {/* Message box */}\n                    <div className={Classes.msgBox}>\n                        <Input\n                            refs={this.textInput}\n                            type='text'\n                            name='message'\n                            label=''\n                            value={this.state.message}\n                            display='inline-block'\n                            width='75%'\n                            marginRight='0.8rem'\n                            active={this.state.reciever ? true : false}\n                            press={this.press} />\n                        <Button\n                            type='success'\n                            name='Sends'\n                            display='inline'\n                            click={this.chat} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n})\n\nexport default connect(mapStateToProps, null)(Chatter);","import React from 'react'\nimport \"./404.css\";\n\nexport default () => {\n    return (\n        <div className='errorPage'>\n            ERROR 404: Page not found\n    </div>\n    )\n}\n","import React, { PureComponent } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from './utils/setAuthToken';\nimport { setCurrentUser, logoutUser } from './actions/authActions';\nimport store from './store';\nimport Navbar from './components/Navbar/navbar';\nimport Footer from './components/Footer/footer';\nimport Login from './containers/Form/Login/login';\nimport SignUp from './containers/Form/SignUp/signup';\nimport PrivateRoute from \"./hoc/auth/PrivateRoute\";\nimport Chatter from './containers/chatter';\nimport NotFound404 from './components/404/404';\nimport './App.css';\n\n// Check for token \nif (localStorage.getItem('jwt')) {\n  // Set auth token header auth\n  setAuthToken(localStorage.getItem('jwt'));\n\n  // Decode token and get user info\n  const decoded = jwt_decode(localStorage.getItem('jwt'));\n\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n  // Check for expired token\n  const currentTime = Date.now() / 1000;\n  if (currentTime > decoded.exp) {\n    // Logout the user\n    store.dispatch(logoutUser());\n    // TODO: Clear current Profile\n    // Redirect to login\n    window.location.href = '/';\n  }\n}\nclass App extends PureComponent {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n\n            {/* Navbar renderin here */}\n            <Switch>\n              <Route path='/' exact render={() => <Navbar name='Sign Up' link='/sign-up' />} />\n              <Route path='/sign-up' exact render={() => <Navbar name='Login' link='/' />} />\n              <Route exact path='/chatter' render={() => <Navbar name='Signout' link='/' />} />\n              <Route path='/*' exact render={() => <Navbar name='Login' link='/' />} />\n            </Switch>\n            {/* Main Content here */}\n            <main className='container'>\n              <Switch>\n                <Route path='/' exact component={Login} />\n                <Route path='/sign-up' exact component={SignUp} />\n                <Route exact path='/chatter' component={PrivateRoute(Chatter)} />\n                <Route path='/*' exact component={NotFound404} />\n              </Switch>\n            </main>\n\n            {/* Footer here - A static component */}\n            {window.screen.width > 800 ? <Footer /> : null}\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"chatter_wrapper__KRsEg\",\"list\":\"chatter_list__1LFmQ\",\"view\":\"chatter_view__1vJbZ\",\"addFriends\":\"chatter_addFriends__2Hw3Y\",\"nameField\":\"chatter_nameField__3XGu_\",\"msgBlock\":\"chatter_msgBlock__34ima\",\"msgBox\":\"chatter_msgBox__3JaTK\",\"chatter_mob\":\"chatter_chatter_mob__1dQ44\",\"display\":\"chatter_display__tkmAW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"placeForm\":\"login_placeForm__1pTeG\",\"image\":\"login_image__3fpwt\",\"Welcome\":\"login_Welcome__pm-bk\",\"flash\":\"login_flash__294Kb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"navbar_navbar__1q8X2\",\"navItems\":\"navbar_navItems__1Wi18\",\"div\":\"navbar_div__355Pz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"button_default__WnKnV\",\"danger\":\"button_danger__1sY6T\",\"success\":\"button_success__3OsO1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"placeForm\":\"signup_placeForm__2z8P4\",\"flash\":\"signup_flash__l7Nqt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"msg\":\"message_msg__3weeh\",\"msg_out\":\"message_msg_out__2kHHP\",\"msg_in\":\"message_msg_in__3gOgq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"input_Input__DtkgV\",\"for\":\"input_for__1QN3l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"footer_footer__Vr4ZL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"form_Form__16rR8\"};"],"sourceRoot":""}